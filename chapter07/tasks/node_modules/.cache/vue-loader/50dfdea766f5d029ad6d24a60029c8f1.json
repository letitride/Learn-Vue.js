{"remainingRequest":"/Users/ichikawafumiya/.config/yarn/global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ichikawafumiya/study/Vue/chapter07/tasks/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ichikawafumiya/study/Vue/chapter07/tasks/App.vue","mtime":1587277318866},{"path":"/Users/ichikawafumiya/.config/yarn/global/node_modules/babel-loader/lib/index.js","mtime":1586689780502},{"path":"/Users/ichikawafumiya/.config/yarn/global/node_modules/cache-loader/dist/cjs.js","mtime":1586820850090},{"path":"/Users/ichikawafumiya/.config/yarn/global/node_modules/vue-loader/lib/index.js","mtime":1586820855025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBuZXdUYXNrTmFtZTogIiIsCiAgICAgIG5ld1Rhc2tMYWJlbElkczogW10sCiAgICAgIG5ld0xhYmVsVGV4dDogJycKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB0YXNrcygpewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVycy5maWx0ZXJlZFRhc2tzCiAgICB9LAoKICAgIGxhYmVscygpewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUubGFiZWxzCiAgICB9LAoKICAgIGZpbHRlcigpewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZmlsdGVyCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRUYXNrKCl7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkVGFzaycsIHsKICAgICAgICBuYW1lOiB0aGlzLm5ld1Rhc2tOYW1lLAogICAgICAgIGxhYmVsSWRzOiB0aGlzLm5ld1Rhc2tMYWJlbElkcwogICAgICB9KQogICAgICB0aGlzLm5ld1Rhc2tOYW1lID0gJycKICAgIH0sCgogICAgdG9nZ2xlVGFza1N0YXR1cyh0YXNrKXsKICAgICAgY29uc29sZS5sb2coInN0YXR1cyBjaGFuZ2UiKQogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3RvZ2dsZVRhc2tTdGF0dXMnLHsgaWQ6IHRhc2suaWR9KQogICAgfSwKCiAgICBhZGRMYWJlbCgpewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZExhYmVsJywgewogICAgICAgIHRleHQ6IHRoaXMubmV3TGFiZWxUZXh0CiAgICAgIH0pCiAgICB9LAoKICAgIGdldExhYmVsVGV4dChpZCl7CiAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5sYWJlbHMuZmlsdGVyKGxhYmVsID0+IGxhYmVsLmlkID09PSBpZClbMF0KICAgICAgcmV0dXJuIGxhYmVsID8gbGFiZWwudGV4dCA6ICcnCiAgICB9LAogIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n  <div>\n    <h2>タスク一覧</h2>\n    <ul>\n      <li v-for=\"task in tasks\" v-bind:key=\"task.id\">\n        <input type=\"checkbox\" v-bind:checked=\"task.done\"\n          v-on:change=\"toggleTaskStatus(task)\">\n        {{ task.name }}\n        -\n        <span v-for=\"id in task.labelIds\" v-bind:key=\"id\">\n          {{ getLabelText(id)}}\n        </span>\n      </li>\n    </ul>\n    <form v-on:submit.prevent=\"addTask\">\n      <input type=\"text\" v-model=\"newTaskName\" placeholder=\"新しいタスク\">\n    </form>\n\n    <h2>ラベル一覧</h2>\n    <ul>\n      <li v-for=\"label in labels\" v-bind:key=\"label.id\">\n        <input type=\"checkbox\" v-bind:value=\"label.id\" v-model=\"newTaskLabelIds\">\n        {{ label.text }}\n      </li>\n    </ul>\n\n    <form v-on:submit.prevent=\"addLabel\">\n      <input type=\"text\" v-model=\"newLabelText\" placeholder=\"新しいラベル\">\n    </form>\n\n    <h2>ラベルでフィルタ</h2>\n    <ul>\n      <li v-for=\"label in labels\" v-bind:key=\"label.id\">\n        <input type=\"radio\" v-bind:checked=\"label.id === filter\"\n          v-on:change=\"changeFilter(label.id)\">\n          {{ label.text }}\n      </li>\n      <li>\n        <input type=\"radio\" v-bind:checked=\"filter === null\"\n          v-on:change=\"changeFilter(null)\">\n          フィルタしない\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      newTaskName: \"\",\n      newTaskLabelIds: [],\n      newLabelText: ''\n    }\n  },\n  computed: {\n    tasks(){\n      return this.$store.getters.filteredTasks\n    },\n\n    labels(){\n      return this.$store.state.labels\n    },\n\n    filter(){\n      return this.$store.state.filter\n    }\n  },\n  methods: {\n    addTask(){\n      this.$store.commit('addTask', {\n        name: this.newTaskName,\n        labelIds: this.newTaskLabelIds\n      })\n      this.newTaskName = ''\n    },\n\n    toggleTaskStatus(task){\n      console.log(\"status change\")\n      this.$store.commit('toggleTaskStatus',{ id: task.id})\n    },\n\n    addLabel(){\n      this.$store.commit('addLabel', {\n        text: this.newLabelText\n      })\n    },\n\n    getLabelText(id){\n      const label = this.labels.filter(label => label.id === id)[0]\n      return label ? label.text : ''\n    },\n  }\n}\n</script>>"]}]}